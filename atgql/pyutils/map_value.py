from collections.abc import Callable
from typing import Final, TypeVar

from atgql.pyutils.obj_map import ObjMap, ReadOnlyObjMap

T = TypeVar('T')
V = TypeVar('V')


def map_value(mapping: ReadOnlyObjMap[T], fn: Callable[[T, str], V]) -> ObjMap[V]:
    """
    Creates an object map with the same keys as `map` and values generated by
    running each value of `map` thru `fn`.
    """

    result: Final[dict] = {}

    for key, value in mapping.items():
        result[key] = fn(value, key)

    return result
